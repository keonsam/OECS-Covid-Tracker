{"version":3,"sources":["components/navbar/Navbar.js","components/loader/Loader.js","components/table/Table.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","searchValue","handleChange","handleSubmit","className","role","onSubmit","htmlFor","type","id","value","onChange","Loader","data-testid","viewBox","aria-labelledby","lang","cx","cy","r","fill","strokeWidth","Table","columns","data","filterStr","useTable","useGlobalFilter","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","useEffect","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","scope","render","row","getRowProps","cells","cell","getCellProps","Footer","target","href","rel","App","useState","search","setSearch","setData","countries","getData","a","fetch","join","then","res","json","dataSet","useMemo","Header","accessor","e","preventDefault","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f986d37.chunk.js","sourcesContent":["import \"./Navbar.css\"\r\n\r\nconst Navbar = ({searchValue, handleChange, handleSubmit}) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"container nav-body\">\r\n                <h1>OECS Covid Tracker</h1>\r\n                <form role='search' onSubmit={handleSubmit}>\r\n                    <label htmlFor='header-search'>\r\n                        <span className='visually-hidden'>Search</span>\r\n                    </label>\r\n\r\n                    <input className=\"search-field\" type='search' id='header-search' value={searchValue} onChange={handleChange}/>\r\n\r\n                    <button type='submit' className='visually-hidden'>\r\n                    Search\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import \"./Loader.css\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\" data-testid=\"loader\">\r\n            <svg className=\"spinner\" viewBox=\"0 0 50 50\" aria-labelledby=\"title\">\r\n                <title id=\"title\" lang=\"en\">Spinning loading screen</title>\r\n                <circle className=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"5\"></circle>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import { useEffect } from \"react\";\r\nimport { useTable, useGlobalFilter } from \"react-table\";\r\nimport \"./Table.css\"\r\n\r\nconst Table = ({columns, data, filterStr}) => {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        setGlobalFilter,\r\n    } = useTable({ columns, data }, useGlobalFilter)\r\n\r\n    useEffect(() => {\r\n        setGlobalFilter(filterStr || \"\")\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filterStr])\r\n\r\n    return (\r\n        <table  className=\"data-table\" {...getTableProps()}>\r\n            <caption className=\"clipped\">A summary of Covid 19 data in the Organisation of Eastern Caribbean States</caption>\r\n            <thead className=\"data-table-head\">\r\n            {headerGroups.map(headerGroup => (\r\n                <tr className=\"data-table-tr\" {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                    <th\r\n                    className=\"data-table-th\"\r\n                    {...column.getHeaderProps()}\r\n                    scope=\"col\"\r\n                    >\r\n                    {column.render('Header')}\r\n                    </th>\r\n                ))}\r\n                </tr>\r\n            ))}\r\n            </thead>\r\n            <tbody className=\"data-table-body\" {...getTableBodyProps()}>\r\n            {rows.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                <tr className=\"data-table-tr\" {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                    return (\r\n                        <td\r\n                        className=\"data-table-td\"\r\n                        {...cell.getCellProps()}\r\n                        >\r\n                        {cell.render('Cell')}\r\n                        </td>\r\n                    )\r\n                    })}\r\n                </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;","import \"./Footer.css\"\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\" data-testid=\"footer\">\r\n            <p>Made with <span className=\"footer-heart\">&#10084;</span> by{\" \"}\r\n                <a target=\"_blank\" href=\"https://github.com/keonsam/OECS-Covid-Tracker\" rel=\"noreferrer\">\r\n                    Keon Samuel Github\r\n                </a>\r\n                <span className=\"removed\">(opens in a new window)</span>\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import './App.css';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport Loader from './components/loader/Loader';\r\nimport Table from './components/table/Table';\r\nimport Footer from './components/footer/Footer';\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\")\r\n  const [data, setData] = useState([])\r\n\r\n  const countries = [\"28\", \"212\", \"308\", \"500\", \"659\", \"662\", \"670\", \"660\", \"92\", \"474\", \"312\"]\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    //disabled leave for accessibility\r\n  }\r\n\r\n  const getData = async() => {\r\n    const data = await fetch(`https://corona.lmao.ninja/v3/covid-19/countries/:${countries.join(\",\")}`).then(res => res.json())\r\n    setData(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const dataSet = useMemo( () => data, [data])\r\n\r\n  const columns = useMemo( () => [\r\n    {\r\n      Header: 'Country',\r\n      accessor: 'country',\r\n    },\r\n    {\r\n      Header: 'Total Cases',\r\n      accessor: 'cases',\r\n    },\r\n    {\r\n      Header: 'New Cases',\r\n      accessor: 'todayCases',\r\n    },\r\n    {\r\n      Header: 'Total Deaths',\r\n      accessor: 'deaths',\r\n    },\r\n    {\r\n      Header: 'New Deaths',\r\n      accessor: 'todayDeaths',\r\n    },\r\n    {\r\n      Header: 'Total Recovered',\r\n      accessor: 'recovered',\r\n    },\r\n    {\r\n      Header: 'New Recovered',\r\n      accessor: 'todayRecovered',\r\n    },\r\n    {\r\n      Header: 'Active',\r\n      accessor: 'active',\r\n    },\r\n  ], [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar searchValue={search} handleChange={handleChange} handleSubmit={handleSubmit} />\r\n      <main className=\"container\">\r\n        <div className=\"main-body\">\r\n          {!data?.length ?  <Loader /> : <Table data={dataSet} columns={columns} filterStr={search} />}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}